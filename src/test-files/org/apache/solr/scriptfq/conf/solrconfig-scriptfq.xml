<?xml version="1.0" ?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<config>
  <luceneMatchVersion>${tests.luceneMatchVersion:LUCENE_CURRENT}</luceneMatchVersion>
 
  <!--  The DirectoryFactory to use for indexes.
        solr.StandardDirectoryFactory, the default, is filesystem based.
        solr.RAMDirectoryFactory is memory based and not persistent. -->
  <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.RAMDirectoryFactory}"/>

  <requestHandler name="standard" class="solr.StandardRequestHandler"/>

  <updateHandler class="solr.DirectUpdateHandler2"/>
  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />

  <requestHandler name="/reloadCache"
                  class="org.apache.solr.search.function.FileFloatSource$ReloadCacheRequestHandler" />

  <!-- test ValueSourceParser plugins -->
  <valueSourceParser name="nvl" class="org.apache.solr.search.function.NvlValueSourceParser">
    <float name="nvlFloatValue">0.0</float>
  </valueSourceParser>

  <valueSourceParser name="js" class="org.apache.solr.scriptfq.ScriptValueSourceParser">
	  <str name="script"><![CDATA[
	  		function pi(document){
	  			return 3.14;
	  		}
	  		
	  		function e(document){
	  			return 2.7182;
	  		}
	  		
	  		function getVal(document){
	  			return document.doubleVal("foo_pd");
	  		}
	  		
	  		function duplicate(d){
	  			return d.doubleVal("foo_pd")*2;
	  		}
	  		
	  		function ms(d){
	  			return d.dateMsVal("date_tdt");
	  		}
	  		  		
	  		function recip(x, m, a, b){
	  			return a/(m*x+b);
	  		}
	  		
	  		function dateboost(d){
	  			var date = d.dateMsVal("date_tdt");
	  			return recip(date, 3.16e-11, 1, 1);
	  		}
	  ]]></str>
  </valueSourceParser>

</config>
